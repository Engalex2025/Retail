/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package distsys.retail;

import generated.grpc.SalesHeatmap.SalesHeatmapGrpc;
import generated.grpc.SalesHeatmap.SalesRequest;
import generated.grpc.SalesHeatmap.SalesUpdate;
import io.grpc.ManagedChannel;
import io.grpc.ManagedChannelBuilder;
import io.grpc.stub.StreamObserver;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.JOptionPane;

///**
 *
 * @Alexandre
 */
public class SalesHeatmapGUI extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(SalesHeatmapGUI.class.getName());
    private static SalesHeatmapGrpc.SalesHeatmapStub asyncStub;
    ManagedChannel channel;

    /**
     * Creates new form SalesHeatmapGUI
     */
    public SalesHeatmapGUI() {
        initComponents();

        channel = ManagedChannelBuilder
                .forAddress("localhost", 50051) // ou use o hostname do seu hosts
                .usePlaintext()
                .build();

        asyncStub = SalesHeatmapGrpc.newStub(channel);

        // Fechar canal ao fechar a janela
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                if (channel != null) {
                    channel.shutdown();
                }
                System.exit(0);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        startStream = new javax.swing.JButton();
        sectionID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputUpdates = new javax.swing.JTextArea();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter Section ID:");

        startStream.setText("Start Stream");
        startStream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStreamActionPerformed(evt);
            }
        });

        outputUpdates.setColumns(20);
        outputUpdates.setRows(5);
        jScrollPane2.setViewportView(outputUpdates);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startStream)
                    .addComponent(sectionID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sectionID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addComponent(startStream)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startStreamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStreamActionPerformed
                                            
    String sectionId = sectionID.getText().trim();

    if (sectionId.isEmpty()) {
        outputUpdates.append("Please enter a Section ID before starting the stream.\n");
        return;
    }

    outputUpdates.setText(""); // Clear previous messages
    outputUpdates.append("Starting sales stream for Section: " + sectionId + "...\n");

    SalesRequest request = SalesRequest.newBuilder()
            .setSectionId(sectionId)
            .build();

    asyncStub.streamSalesUpdates(request, new StreamObserver<SalesUpdate>() {
        @Override
        public void onNext(SalesUpdate update) {
            String msg = "Update - Section: " + update.getSectionId()
                       + " | Sales: " + update.getNewSales()
                       + " | Time: " + update.getTimestamp() + "\n";
            SwingUtilities.invokeLater(() -> {
                outputUpdates.append(msg);
            });
        }

        @Override
        public void onError(Throwable t) {
            SwingUtilities.invokeLater(() -> {
                outputUpdates.append("Error receiving updates: " + t.getMessage() + "\n");
            });
        }

        @Override
        public void onCompleted() {
            SwingUtilities.invokeLater(() -> {
                outputUpdates.append("Stream completed for Section " + sectionId + ".\n");
            });
        }
    });
}

    }//GEN-LAST:event_startStreamActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesHeatmapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesHeatmapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesHeatmapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesHeatmapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesHeatmapGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea outputUpdates;
    private javax.swing.JTextField sectionID;
    private javax.swing.JButton startStream;
    // End of variables declaration//GEN-END:variables
}
